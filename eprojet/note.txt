*******************************************
******* Wordpress pour développeur ********

****************
Installation de WP
****************

On installe WP dans un dossier /eprojet/ dans XAMPP.
    Nom de la BDD : eprojet
    Titre du site : Mes petites annonces


Etapes d'installation : 
    1 - télécharger WP sur  https://fr.wordpress.org/
    2 - Dézipper l'archive et mettre le dossier sur XAMPP
    3 - Dans PHPMyAdmin créer une BDD (vide)
    4 - Lancer le site via localhost dans le navigateur et remplir les formulaires : 
        - Nom de la BDD
        - Identifiant de la BDD
        - Mot de passe de la BDD
        - Adresse de la BDD : localhost pour nous

        - Titre du site
        - Identifiant et Mot de passe d'administration

5 - WP s'installe... puis on se connecte au back-office avec les identifiants indiqués précédemment.

URL d'accès au back-office par défaut : https://monsite.com/wp-admin/


***********************
Créer un thème enfant
***********************
- Les AVANTAGES d'un thème enfant :
Grâce aux thèmes enfants vous pouvez modifier un thème existant en conservant le bénéfice des mises à jour du thème parent (exemple : nouvelles fonctionnalités, mise à jour du sécurité ...).

Un thème enfant permet de modifier les STYLES et les FICHIERS TEMPLATES d'un thème existant parent, ainsi que d'ajouter des FONCTIONNALITES.

-CREER un thème enfant : 
1 - Pour créer un thème enfant du thème "twentyseventeen", on crée un dossier "twentyseventeen-child" dans le dossier /wp-content/themes. On nomme le dossier enfant ainsi comme le veut la bonne pratique.

2 - Y créer un fichier style.css et y mettre le code suivant :

    /*
    Theme Name: twentyseventeen-child
    Template: twentyseventeen
    */

    @import url("../twentyseventeen/style.css");


Attention : ne pas séparer les ":" des étiquettes Theme Name et Template ci-dessus par un espace !

Le code CSS du thème enfant écrase le code CSS du parent, car il est exécuté APRES celui du parent.

3 - ACTIVER le thème enfant dans le back-office. Puis vous pouvez le modifier.

4 - Modifier un fichier template :
    Pour cela il suffit de copier le fichier parent que l'on veut modofier dans le dossier du thème enfant

    Exemple :
    Copier le fichier footer.php du thème parent et le coller dans le thème enfant.
    Puis modifier sa structure HTML conformément à la maquette du client.

    Le fichier template enfant REMPLACE celui du thème parent.

5 - Le fichier functions.php :
    Ce fichier fonctionne différemment : il n'écrase pas le fichier du parent, mais il est chargé AVANT celui du parent. Ainsi, les fonctions enfants s'ajoutent à celles du parent.

***************************
La hiérarchie de WP
***************************
// Installer l'extension SHOW CURRENT TEMPLATE de Jotaki Taisuke.

// La hiérarchie de WP :
Exemple avec la page d'accueil : si le fichier template front-page.php existe, wp l'utilise pour afficher la page. S'il n'existe pas, WP continue son "chemin" et prend le fichier suivant home.php. S'il n'existe pas non plus, WP continue son "chemin" et prend par défaut le fichier index.php.

// Description des fichiers templates de la hiérarchie :
Un template est un modèle de page. S'il y a 100 pages sur votre site, il n'y a pas 100 fichiers (comme tous les sites statiques) : les continus sont enregistré dans une BDD, et seulement quelques fichiers appelés template affichent le conteu dynamiquement (= automatiquement). 
index.php : fichier principale du site qui est utilisé si aucun des autres templates demandé n'existe (template par défaut).

archive.php : affiche la liste des articles quand les fichiers spécifiques n'existent pas (author.php, category.php, tag.php ou date.php => cf  la hiérarchie)

single.php : affiche un seul article crée dans le back-office

page.php : affiche une page créée dans le back-office

home.php : affichage de la page d'accueil prioritaire sur index.php s'il existe

comments.php : affichage des commentaires

404.php : affiche la page de contenu non trouvé

search.php : affiche les résultats d'une recherche

---------

functions.php : fichier d'inclusion contenant les fonctions du thème

header.php : fichier d'inclusion du haut du site (systématiquement inclus dans les templates du site)

footer.php : fichier d'inclusion du bas du site (systématiquement inclus dans les templates du site)

sidebar.php : fichier d'inclusion de la barre latérale contenant des widgets (ou autres choses) qui est inclus dans les templates du site

---------------------------
// Template spécifiques :
On peut dans WP faire des templates particuliers sur la base des fichiers template d'origine vus ci-dessus, en leur ajoutant un id ou un slug dans le nom du fichier.

"slug" signifie en anglais "identifiant" : il représente un élément de contenu, article ou page. Exemple : l'article "Seul sur Mars" aura pour slug "seul-sur-mars" et pour url https://monsite.com/seul-sur-mars.

- Page spécifique dans l'ordre de priorité :
    - page-$slug.php (exemple : page-contact.php)
    - page-$id.php (exemple : page-3.php)
    - page.php
    -index.php


- Catégorie spécifique dans l'ordre de priorité :
    - category-$slug.php (exemple : category-auto.php)
    - category-$id.php (exemple : category-108.php)
    - category.php
    - index.php



***************************
Développement d'un thème complet
***************************

Les grandes étapes seront : 
    01 - La création du thème graphique et de ses templates
    02 - initialisation des zones de widgets
    03 - initialisation des zones de menu
    04 - Création du menu principal et d'une front page
    05 - Création d'un type de contenu "annonces" avec des champs personnalisés (CPT UI et ACF)
    06 - création des templates spécifiques : single-annonce.php et category-blob-auto.php
    07 - création du template spécifique : category.PHPMyAdmin
    08 - Afficher la dernière annonce pratique



----------------------------------
01 - La création du thème graphique et de ses templates
----------------------------------

// Créer un dossier au nom du thème "eprojet" dans : wp-content/themes

Nous allons y mettre tous nos fichiers du thème.

// Création du screenshot du site :
Il s'agit du fichier qui s'appelle screenshot.png. Il représente le thème dans le back-office

// Création de la feuille de style : style.css

Le fichier style.css contien en commentaire toutes les infos affichés dans le back-office > apparence > thèmes.

On y met le code suivant :

/*
Theme Name: eprojet
Author: moi
Description: Thème du site de petites annonces de véhicule d'occasion.
version: 1.0
*/
 
// Création d'un sous-dossier : /assets/

On y met les ressources nécessaire au site (img, CSS, JS, etc.).

//  Création du fichier d'inclusion header.php :
Pour le code, voir le fichier correspondant.

// Création d'un fichier d'inclusion footer.php :
Pour le code, voir le fichier correspondant.

// On crée les fichiers templates suivants : 
        index.php
        page.php
        single.php 
        front-page.php 
        category.php


=> dans category.php : on a écrit "fichier vide pour l'instant"

=> dans les 4 autres fichiers, on a mis le code suivant : 
                        <?php
                            get_header();  // inclusion de header.php
                        ?>

                            <?php
                                if(have_posts()) :
                                    while (have_posts()) : the_post();
                            ?>

                                    <h2 class="col-lg-12"><a href="<?php the_permalink(); ?>"><?php the_title(); ?></a></h2>
                                    <div class="col-lg-12"><?php the_content(); ?></div>

                            <?php
                                    endwhile;

                                else :
                                    echo '<p>Aucun contenu ne correspond à votre demande...</p>';
                                endif;
                            ?>

                        <?php
                        get_footer(); // inclusion de footer.php
                        ?>


--------------------------------
// La boucle de WP et le code des templates :

Dans les templates de WP, nous mettrons TOUJOURS une boucle, même s'il n'y a qu'un seul contenu à afficher.

On inscrit donc le code ci-dessus au minimum dans tout les templates.


- have_posts() : retourne un boolean pour savoir s'il reste des objets à afficher sur la page en cours.
Par exemple, si l'on cherche à afficher les articles (ou les annonces ou les produits ...), cette fonction retournera true tant que les articles (ou les annonces ou les produits ...) récupérées dans la BDD n'auront pas été affichés.

- the_post() : à l'intérieur de la boucle while, la fonction the_post() récupère les données d'un post (= article ou page). Puis un curseur interne à WP sélectionne le post suivant. Lorsque le curseur arrive au dernier post (article ou page) alors la méthode have_posts() renvoie false et la boucle s'arrête.

- the_content() : affiche le contenu du post

- the_title() : affiche son titre
 
- the_permalink() : affiche son lien (url)

- the_excerpt() : affiche l'extrait du post

- the_field() : affiche un champ personnalisé
- the_ID() : affiche l'id du post

-----------
Le reste du code :
- get_header() et get_footer() : permet d'inclure header.php et footer.php

- get_sidebar() : permet d'inclure le fichier appelé sidebar.php, qui est la zone latéral contenant les widgets

- get_template_part('content', 'monFichier') : permet d'inclure le fichier appelé content-monFichier.php.

Ces inclusions représentent des "sous-parties" de template.




----------------------------------
02 - initialisation des zones de widgets
----------------------------------

Trois étapes pour créer une zone de widgets :
    1 - On déclare la zone de widgets dans functions.php avec la fonction register_sidebar()
    2 - On place la zone de widgets dans le template qui nous intéresse avec la fonction dynamic_sidebar()
    3 - Dans le back-office, on n'oublie pas de placer un widget à l'intérieur de la zone pour le voir


// Création du fichier functions.php : 

Pour déclarer notre zone de widget on y met le code suivant :

function eprojet_init_sidebar() { //Notre fonction qui contient la déclaration des zone de widgets

    register_sidebar(array(
        'name' => 'région entête', // nom qui apparaît dans le BO 
        'id'   => 'region-entete',  // identifiant unique de la zone pour pouvoir l'appeler dans un template
        'description' => 'Cette zone de widget est en entête de la page d\'accueil'  // description qui apparaît dans le BO
    ));

}

add_action('widgets_init', 'eprojet_init_sidebar');



// Création d'un fichier sidebar-droite.php pour contenir la barre latérale de droite avec sa zone de widget à l'intérieur :

Ce fichier sera utilisé un peu plus tard dans le template single-annonce.php

On y met le code suivant :

<div id="region-droite">
    <?php 
        dynamic_sidebar('colonne-droite');
    ?>
</div>


// On insère la zone widget "région entête" dans le template appelé header.php : 

On y met le code suivant :

<?php 
        if (is_front_page()) :  // si on est sur la page d'accueil, on affiche l'entête avec sa zone de widgets
    ?>
        <div id="entete" class="align-items-center">
            <div class="container">
                <?php dynamic_sidebar('region-entete');
                ?>
            </div>
        </div>
    <?php 
        endif;
    ?>


----------------------------------------
// Exercice : mettre une zone de widgets dans le footer de gauche, avec un widget texte "ici on peut mettre un widget" à l'intérieur



----------------------------------
03 - initialisation des zones de menus
----------------------------------

On va créer le menu principal du site.

Pour créer une zone de menu :
    1 - On déclare la zone de menu dans functions.php avec la fonction register_nav_menu()
    2 - On place la zone de menu dans le template qui nous intéresse avec la fonction wp_nav_menu()
    3 - Dans le back-office, on palce un menu à l'intérieur de la zone.


// Déclaration de la zone de menu dans functions.php :
    on y met le code suivant :
    function eprojet_init_menu() {
    register_nav_menu('primary', 'menu principal');
}
add_action('init', 'eprojet_init_menu');

// On place la zone de menu dans header.php :

<?php 
    wp_nav_menu(array( 
        'theme_location' => 'primary', 
        'menu_class'     => 'navbar-nav',
    ));
?>

// On crée le menu principale dans le back-office auquel on ajoute une page "contact" :

    Dans Apparence > Menus > Nom de menu > saisir "mon menu principal" puis cliquer sur "Créer le menu"

    Ensuite, on affecte ce menu à l'emplacement appelé "menu principal" crée dans functions.php : on clique sur la case à cocher "menu principal".

    Enfin, on ajoute la ou les pages souhaitées dans le menu.

// Exercice : Créer une zon ede me,nu dans le footer droite et y mettre un lien de menu vers une page "mention légale" que vous créez dans le back-office 

---------------------------------------------------------------------------------
04 - Création du menu principale avec des catégories et création d'une front page
---------------------------------------------------------------------------------

// On va créer des catégories pour les annonces, pour les ajouter au menu principal :

Les catégories sont les suivantes :
        - occasion
            - Voitures
            - Utilitaires
            - Deux roues

        - Blog auto


--------------------------
// On crée une page d'accueil spécifique :

Exercice : Créer dans le back-office une page "Home" avec du lorem, puis vous la paramétrez comme page d'accueil du site (On doit arriver quand on clique sur "Mes petites annonces"). Enfin vous ajoutez cette page au menu principal


------------------------------------------------------------------------------------------
05 - Création d'un type de contenu "anonces" avec des champs personnalisés (CPT UI et ACF)
------------------------------------------------------------------------------------------

// Création d'un type de contenu "annonces" :
Le nouveau type "annonces" que l'on va créer s'appelle dans le langage WP un CUSTOM POST TYPE (type de contenu customisé).

Problématique : en l'état initial de WP, on ne peut que créer des pages ou des articles. Nous avons donc besoin de créer un CPT personnalisé pour faire des annonces.

Pour cela on utilise un plugin appelé "CUSTOM POST TYPE UI" par webDevStudios.

    Dans CPT UI > Add/Edit post types > puis on remplie le formulaire :
    Post Type Slug* : annonce  (on respecte la charte de nommage des identifiants)
    Plural label* : Annonces    (étiquette au pluriel)
    Singular label* : Annonce   (étiquette au singulier)

    Puis dans le bloc "Settings", on an coché "Catégorie (wp core)" qui est tout en bas... Ce réglage permet d'utiliser nos catégopries crées précédemment dans nos annonces.

    Enfin faite "Add post type" pour enregistrer.


//-----------------------------------
//Création des champs personnalisées pour le CPT "annonces" :

Pour cela, on utilise un plugin appelé "ADVANCED CUSTOM FIELD" par Elliot Condon (ACF).

Dans le menu ACF > bouton Ajouter > on met pour titre "champs pour annonces".
Puis on crée les 6 champs : 
1° titre du champ : photo
    Nom du champ : photo (= identifiant)
    Type de champ : texte
    Requis : oui 

2°  titre du champ : marque
    Nom du champ : marque (= identifiant)
    Type de champ : texte
    Requis : oui 

3° titre du champ : modèle
    Nom du champ : modele (= identifiant)
    Type de champ : texte
    Requis : oui 

4° titre du champ : km
    Nom du champ : km (= identifiant)
    Type de champ : nombre
    Requis : oui 

5° titre du champ : carburant
    Nom du champ : carburant (= identifiant)
    Type de champ : Liste de choix
    Requis : oui 
    choix : Essence
            Diesel
            Hybride
            Electrique


6° titre du champ : prix
    Nom du champ : prix (= identifiant)
    Type de champ : nombre
    Requis : oui 


Enfin, dans "Assigner ce groupe de champs" > Montrer ce champ quand "Type de puclication" > "est égal à" > "annonce".

Ce dernier paramètrage permet d'affecter ces champs au CPT "annonces" au lieu de post par défaut.

N'oubliez pas de publier !

// Créer 2 annonces : FIAT 500 et Renault Mégane dans la catégorie "Voitures".

// Exercice : Créer un custom post type "pro" pour afficher les professionnels qui proposent leurs services. Puis vous ajouteez aux champs titre et contenu déjà présent dans ce CPT "pro", les champs "code postal", "ville" et "téléphone" (type texte). Enfin vous créez un ou deux professionnels et vous les ajoutez au menu principal pour les afficher (pour l'instant on ne voit que le title et le content).

--------------------------------------------------------------------------------------
06 - Création des templates spécifiques : single-annonce.php et category-blog-auto.php
--------------------------------------------------------------------------------------

// Templates spécifiquespour les annonces :

En front avec le plugin SHOW CURRENT TEMPLATE on voit que l'on est dans le modèle single.php quand on clique sur une annonce.

Puis on se réfère à la hiérarchie de WP pour déterminer le fichier à créer : nous voyons à gauche de single.php que l'on peut créer un fichier single-$postype.php (en orange). $postype correspond précisemment au slug du CPT "Annonces". On peut lme vérifier dans le menu CPT UI > Edit post type > choisir "Annonces".

Notre slug étant écrit "annonce", notre fichier s'écrira single-annonce.php.


Pour afficher les champs personnalisées du CPT "Annonces", on met la fonction the_fienl('slug_du_champ') dans le template d'affichage single-annonce.php.


// Template spécifique pour les articles du blog auto :

En front avec SHOW CURRENT TEMPLATE on voit que l'on est dans category.php quand on clique sur Blog Auto.

D'après la hiérarchie, je peux créer un template personnalisé category-$slug.php. $slug est le slug de la catégorie Blog Auto, soit "blog-auto" : on crée un fichier appelé category-blog-auto.php.

---------------------------------------------------
07 - Création du template spécifique : category.php
---------------------------------------------------

Nous allons customiser la page category.php pour afficher la liste des annonces en fonction de la catégorie choisie dans le menu de navigation.

Quand on clique sur une catégorie d'annonces, par défaut WP sélectionne les ARTICLES de cette catégorie.
Nous, nous voulons les posts de type ANNONCE (et non par article), mais WP ne connaît pas ce type car c'est nous qui l'avons crée ! Il nous faut donc créer notre propre requête en BDD pour sélectionner les posts de type ANNONCE avant de las afficher.

Pour le code, voir le fichier category.php 


---------------------------------------
08 - Afficher la dernière annonce parue
---------------------------------------

Nous allons afficher une alerte qui affiche la dernière annonce parue dans la barre latérale de droite (fichier sidebar-droite.php).

Pour le code, voir le fichier sidebar-droite.php. 

***************************
Exercices
***************************

Compléments avant exercices : 
- on crée un template de base archive.php an copiant page.php (ainsi on aura tous les templates de bases dans notre thème).

- Pour pouvoir afficher "Tous les professionnels" dans les menu : on va dans CPT UI > bloc settings > champ Hes Archive que l'on met à TRUE. Cela permet de générer des archives (= liste des professionnels) dans le template archive.php.
Puis on va dans Apparence  > Menus > et on ajoute à notre menu le lien "All professionnels" que l"on renomme "Tous les professionnels".

---------------
Exercice : 
    - Quand on clique sur le lien de menu "Tous les professionnels", on affiche un template spécifique qui affiche la liste des professionnels avec les infos : titre, code postal et ville.

Exercice :
Quand on clique sur un professionnel de la liste, on affiche la page détaillée de celui-ci : créer cette page qui indique son nom, sa description, son code postal, sa ville et son téléphone. De plus, vous mettez à droite de cette page la barre latérale qui contient la dernière annonce de véhicule.

Ajouter sous la page détaillée du professionnel un lien : "retour vers la liste des professionnels".

------------------------------
Exercice :
Ajouter en bas de lapage d'accueil dans 2 bloc côte-à-côte sous le contenu :
    - dans le bloc de gauche : la dernière annonce parue (photo cliquable, titre, prix)
    - dans le bloc de droite : les trois derniers professionnels inscrits (nom cliquable, code postal, ville).

-------------------------

Exercice :
Créer un thème enfant de eprojet. Puis vous faites un template personnalisé de la page contact crée dans le back-office : on y met la barre latérale de droite à GAUCHE.




